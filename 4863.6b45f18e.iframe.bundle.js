"use strict";(globalThis.webpackChunkgutenberg=globalThis.webpackChunkgutenberg||[]).push([[4863],{"./packages/components/src/toggle-group-control/context.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>useToggleGroupControlContext,Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const ToggleGroupControlContext=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createContext)({}),useToggleGroupControlContext=()=>(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useContext)(ToggleGroupControlContext),__WEBPACK_DEFAULT_EXPORT__=ToggleGroupControlContext},"./packages/components/src/toggle-group-control/toggle-group-control-option-base/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>component});var styles_namespaceObject={};__webpack_require__.r(styles_namespaceObject),__webpack_require__.d(styles_namespaceObject,{ButtonContentView:()=>ButtonContentView,LabelView:()=>LabelView,buttonView:()=>buttonView,labelBlock:()=>labelBlock});var Radio=__webpack_require__("./node_modules/reakit/es/Radio/Radio.js"),use_instance_id=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),use_context_system=__webpack_require__("./packages/components/src/ui/context/use-context-system.js"),context_connect=__webpack_require__("./packages/components/src/ui/context/context-connect.ts"),context=__webpack_require__("./packages/components/src/toggle-group-control/context.ts"),emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),config_values=__webpack_require__("./packages/components/src/utils/config-values.js"),colors_values=__webpack_require__("./packages/components/src/utils/colors-values.js"),reduce_motion=__webpack_require__("./packages/components/src/utils/reduce-motion.js");const LabelView=(0,emotion_styled_base_browser_esm.Z)("div",{target:"et6ln9s1"})({name:"sln1fl",styles:"display:inline-flex;max-width:100%;min-width:0;position:relative"}),labelBlock={name:"82a6rk",styles:"flex:1"},buttonView=({isDeselectable,isIcon,isPressed,size})=>(0,emotion_react_browser_esm.iv)("align-items:center;appearance:none;background:transparent;border:none;border-radius:",config_values.Z.controlBorderRadius,";color:",colors_values.D.gray[700],";fill:currentColor;cursor:pointer;display:flex;font-family:inherit;height:100%;justify-content:center;line-height:100%;outline:none;padding:0 12px;position:relative;text-align:center;transition:background ",config_values.Z.transitionDurationFast," linear,color ",config_values.Z.transitionDurationFast," linear,font-weight 60ms linear;",(0,reduce_motion.r)("transition")," user-select:none;width:100%;z-index:2;&::-moz-focus-inner{border:0;}&:active{background:",config_values.Z.toggleGroupControlBackgroundColor,";}",isDeselectable&&deselectable," ",isIcon&&isIconStyles({size})," ",isPressed&&pressed,";",""),pressed=(0,emotion_react_browser_esm.iv)("color:",colors_values.D.white,";&:active{background:transparent;}",""),deselectable=(0,emotion_react_browser_esm.iv)("color:",colors_values.D.gray[900],";&:focus{box-shadow:inset 0 0 0 1px ",colors_values.D.white,",0 0 0 ",config_values.Z.borderWidthFocus," ",colors_values.D.ui.theme,";outline:2px solid transparent;}",""),ButtonContentView=(0,emotion_styled_base_browser_esm.Z)("div",{target:"et6ln9s0"})("display:flex;font-size:",config_values.Z.fontSize,";line-height:1;"),isIconStyles=({size="default"})=>(0,emotion_react_browser_esm.iv)("color:",colors_values.D.gray[900],";width:",{default:"30px","__unstable-large":"34px"}[size],";padding-left:0;padding-right:0;","");var use_cx=__webpack_require__("./packages/components/src/utils/hooks/use-cx.ts"),tooltip=__webpack_require__("./packages/components/src/tooltip/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const{ButtonContentView:component_ButtonContentView,LabelView:component_LabelView}=styles_namespaceObject,WithToolTip=({showTooltip,text,children})=>showTooltip&&text?(0,jsx_runtime.jsx)(tooltip.Z,{text,position:"top center",children}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children});function ToggleGroupControlOptionBase(props,forwardedRef){const toggleGroupControlContext=(0,context.L)(),id=(0,use_instance_id.Z)(ToggleGroupControlOptionBase,toggleGroupControlContext.baseId||"toggle-group-control-option-base"),buttonProps=(0,use_context_system.y)({...props,id},"ToggleGroupControlOptionBase"),{isBlock=!1,isDeselectable=!1,size="default",...otherContextProps}=toggleGroupControlContext,{className,isIcon=!1,value,children,showTooltip=!1,...otherButtonProps}=buttonProps,isPressed=otherContextProps.state===value,cx=(0,use_cx.I)(),labelViewClasses=cx(isBlock&&labelBlock),classes=cx(buttonView({isDeselectable,isIcon,isPressed,size}),className),commonProps={...otherButtonProps,className:classes,"data-value":value,ref:forwardedRef};return(0,jsx_runtime.jsx)(component_LabelView,{className:labelViewClasses,children:(0,jsx_runtime.jsx)(WithToolTip,{showTooltip,text:otherButtonProps["aria-label"],children:isDeselectable?(0,jsx_runtime.jsx)("button",{...commonProps,"aria-pressed":isPressed,type:"button",onClick:()=>{isDeselectable&&isPressed?otherContextProps.setState(void 0):otherContextProps.setState(value)},children:(0,jsx_runtime.jsx)(component_ButtonContentView,{children})}):(0,jsx_runtime.jsx)(Radio.Y,{...commonProps,...otherContextProps,as:"button",value,children:(0,jsx_runtime.jsx)(component_ButtonContentView,{children})})})})}ToggleGroupControlOptionBase.displayName="ToggleGroupControlOptionBase";const component=(0,context_connect.Iq)(ToggleGroupControlOptionBase,"ToggleGroupControlOptionBase")},"./packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_toggle_group_control_option_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/toggle-group-control/toggle-group-control-option-base/component.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnforwardedToggleGroupControlOption(props,ref){const{label,...restProps}=props,optionLabel=restProps["aria-label"]||label;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_toggle_group_control_option_base__WEBPACK_IMPORTED_MODULE_1__.Z,{...restProps,"aria-label":optionLabel,ref,children:label})}UnforwardedToggleGroupControlOption.displayName="UnforwardedToggleGroupControlOption";const ToggleGroupControlOption=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(UnforwardedToggleGroupControlOption),__WEBPACK_DEFAULT_EXPORT__=ToggleGroupControlOption;try{ToggleGroupControlOption.displayName="ToggleGroupControlOption",ToggleGroupControlOption.__docgenInfo={description:'`ToggleGroupControlOption` is a form component and is meant to be used as a\nchild of `ToggleGroupControl`.\n\n```jsx\nimport {\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n} from \'@wordpress/components\';\n\nfunction Example() {\n  return (\n    <ToggleGroupControl label="my label" value="vertical" isBlock>\n      <ToggleGroupControlOption value="horizontal" label="Horizontal" />\n      <ToggleGroupControlOption value="vertical" label="Vertical" />\n    </ToggleGroupControl>\n  );\n}\n```',displayName:"ToggleGroupControlOption",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"ReactText"}},showTooltip:{defaultValue:{value:"false"},description:"Whether to display a Tooltip for the control option. If set to `true`, the tooltip will\nshow the aria-label or the label prop text.",name:"showTooltip",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label for the option. If needed, the `aria-label` prop can be used in addition\nto specify a different label for assistive technologies.",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#ToggleGroupControlOption"]={docgenInfo:ToggleGroupControlOption.__docgenInfo,name:"ToggleGroupControlOption",path:"packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#ToggleGroupControlOption"})}catch(__react_docgen_typescript_loader_error){}try{component.displayName="component",component.__docgenInfo={description:'`ToggleGroupControlOption` is a form component and is meant to be used as a\nchild of `ToggleGroupControl`.\n\n```jsx\nimport {\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n} from \'@wordpress/components\';\n\nfunction Example() {\n  return (\n    <ToggleGroupControl label="my label" value="vertical" isBlock>\n      <ToggleGroupControlOption value="horizontal" label="Horizontal" />\n      <ToggleGroupControlOption value="vertical" label="Vertical" />\n    </ToggleGroupControl>\n  );\n}\n```',displayName:"component",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"ReactText"}},showTooltip:{defaultValue:{value:"false"},description:"Whether to display a Tooltip for the control option. If set to `true`, the tooltip will\nshow the aria-label or the label prop text.",name:"showTooltip",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label for the option. If needed, the `aria-label` prop can be used in addition\nto specify a different label for assistive technologies.",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#component"]={docgenInfo:component.__docgenInfo,name:"component",path:"packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#component"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/toggle-group-control/toggle-group-control/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>toggle_group_control_component});var react=__webpack_require__("./node_modules/react/index.js"),use_context_system=__webpack_require__("./packages/components/src/ui/context/use-context-system.js"),context_connect=__webpack_require__("./packages/components/src/ui/context/context-connect.ts"),use_cx=__webpack_require__("./packages/components/src/utils/hooks/use-cx.ts"),base_control=__webpack_require__("./packages/components/src/base-control/index.tsx"),emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),colors_values=__webpack_require__("./packages/components/src/utils/colors-values.js"),config_values=__webpack_require__("./packages/components/src/utils/config-values.js"),reduce_motion=__webpack_require__("./packages/components/src/utils/reduce-motion.js");const enclosingBorders=isBlock=>{const enclosingBorder=(0,emotion_react_browser_esm.iv)("border-color:",colors_values.D.ui.border,";","");return(0,emotion_react_browser_esm.iv)(isBlock&&enclosingBorder," &:hover{border-color:",colors_values.D.ui.borderHover,";}&:focus-within{border-color:",colors_values.D.ui.borderFocus,";box-shadow:",config_values.Z.controlBoxShadowFocus,";z-index:1;outline:2px solid transparent;outline-offset:-2px;}","")},toggleGroupControlSize=size=>(0,emotion_react_browser_esm.iv)("min-height:",{default:"36px","__unstable-large":"40px"}[size],";",""),block={name:"7whenc",styles:"display:flex;width:100%"},BackdropView=(0,emotion_styled_base_browser_esm.Z)("div",{target:"eakva831"})("background:",colors_values.D.gray[900],";border-radius:",config_values.Z.controlBorderRadius,";left:0;position:absolute;top:2px;bottom:2px;transition:transform ",config_values.Z.transitionDurationFast," ease;",(0,reduce_motion.r)("transition")," z-index:1;outline:2px solid transparent;outline-offset:-3px;"),VisualLabelWrapper=(0,emotion_styled_base_browser_esm.Z)("div",{target:"eakva830"})({name:"zjik7",styles:"display:flex"});var RadioState=__webpack_require__("./node_modules/reakit/es/Radio/RadioState.js"),RadioGroup=__webpack_require__("./node_modules/reakit/es/Radio/RadioGroup.js"),use_resize_observer=__webpack_require__("./packages/compose/build-module/hooks/use-resize-observer/index.js"),use_instance_id=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),use_previous=__webpack_require__("./packages/compose/build-module/hooks/use-previous/index.js"),use_merge_refs=__webpack_require__("./packages/compose/build-module/hooks/use-merge-refs/index.js"),component=__webpack_require__("./packages/components/src/view/component.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ToggleGroupControlBackdrop({containerRef,containerWidth,isAdaptiveWidth,state}){const[left,setLeft]=(0,react.useState)(0),[width,setWidth]=(0,react.useState)(0),[canAnimate,setCanAnimate]=(0,react.useState)(!1),[renderBackdrop,setRenderBackdrop]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{const containerNode=containerRef?.current;if(!containerNode)return;const targetNode=containerNode.querySelector(`[data-value="${state}"]`);if(setRenderBackdrop(!!targetNode),!targetNode)return;const dimensionsRequestId=window.setTimeout((()=>{const{width:offsetWidth,x}=targetNode.getBoundingClientRect(),{x:parentX}=containerNode.getBoundingClientRect();setLeft(x-parentX-1),setWidth(offsetWidth)}),100);let animationRequestId;return canAnimate||(animationRequestId=window.requestAnimationFrame((()=>{setCanAnimate(!0)}))),()=>{window.clearTimeout(dimensionsRequestId),window.cancelAnimationFrame(animationRequestId)}}),[canAnimate,containerRef,containerWidth,state,isAdaptiveWidth]),renderBackdrop?(0,jsx_runtime.jsx)(BackdropView,{role:"presentation",style:{transform:`translateX(${left}px)`,transition:canAnimate?void 0:"none",width}}):null}ToggleGroupControlBackdrop.displayName="ToggleGroupControlBackdrop";const toggle_group_control_backdrop=(0,react.memo)(ToggleGroupControlBackdrop);try{ToggleGroupControlBackdrop.displayName="ToggleGroupControlBackdrop",ToggleGroupControlBackdrop.__docgenInfo={description:"",displayName:"ToggleGroupControlBackdrop",props:{containerRef:{defaultValue:null,description:"",name:"containerRef",required:!0,type:{name:"MutableRefObject<HTMLElement>"}},containerWidth:{defaultValue:null,description:"",name:"containerWidth",required:!1,type:{name:"number"}},isAdaptiveWidth:{defaultValue:null,description:"",name:"isAdaptiveWidth",required:!1,type:{name:"boolean"}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control/toggle-group-control-backdrop.tsx#ToggleGroupControlBackdrop"]={docgenInfo:ToggleGroupControlBackdrop.__docgenInfo,name:"ToggleGroupControlBackdrop",path:"packages/components/src/toggle-group-control/toggle-group-control/toggle-group-control-backdrop.tsx#ToggleGroupControlBackdrop"})}catch(__react_docgen_typescript_loader_error){}var context=__webpack_require__("./packages/components/src/toggle-group-control/context.ts"),use_update_effect=__webpack_require__("./packages/components/src/utils/hooks/use-update-effect.js");function UnforwardedToggleGroupControlAsRadioGroup({children,isAdaptiveWidth,label,onChange,size,value,...otherProps},forwardedRef){const containerRef=(0,react.useRef)(),[resizeListener,sizes]=(0,use_resize_observer.Z)(),baseId=(0,use_instance_id.Z)(ToggleGroupControlAsRadioGroup,"toggle-group-control-as-radio-group").toString(),radio=(0,RadioState.i)({baseId,state:value}),previousValue=(0,use_previous.Z)(value);return(0,use_update_effect.Z)((()=>{previousValue!==radio.state&&onChange(radio.state)}),[radio.state]),(0,use_update_effect.Z)((()=>{value!==radio.state&&radio.setState(value)}),[value]),(0,jsx_runtime.jsx)(context.Z.Provider,{value:{...radio,isBlock:!isAdaptiveWidth,size},children:(0,jsx_runtime.jsxs)(RadioGroup.E,{...radio,"aria-label":label,as:component.Z,...otherProps,ref:(0,use_merge_refs.Z)([containerRef,forwardedRef]),children:[resizeListener,(0,jsx_runtime.jsx)(toggle_group_control_backdrop,{state:radio.state,containerRef,containerWidth:sizes.width,isAdaptiveWidth}),children]})})}UnforwardedToggleGroupControlAsRadioGroup.displayName="UnforwardedToggleGroupControlAsRadioGroup";const ToggleGroupControlAsRadioGroup=(0,react.forwardRef)(UnforwardedToggleGroupControlAsRadioGroup);try{ToggleGroupControlAsRadioGroup.displayName="ToggleGroupControlAsRadioGroup",ToggleGroupControlAsRadioGroup.__docgenInfo={description:"",displayName:"ToggleGroupControlAsRadioGroup",props:{children:{defaultValue:null,description:"The options to render in the `ToggleGroupControl`, using either the `ToggleGroupControlOption` or\n`ToggleGroupControlOptionIcon` components.",name:"children",required:!0,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Label for the control.",name:"label",required:!0,type:{name:"string"}},size:{defaultValue:{value:"'default'"},description:"The size variant of the control.",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"__unstable-large"'}]}},isAdaptiveWidth:{defaultValue:{value:"false"},description:"Determines if segments should be rendered with equal widths.",name:"isAdaptiveWidth",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: ReactText) => void"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"ReactText"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control/as-radio-group.tsx#ToggleGroupControlAsRadioGroup"]={docgenInfo:ToggleGroupControlAsRadioGroup.__docgenInfo,name:"ToggleGroupControlAsRadioGroup",path:"packages/components/src/toggle-group-control/toggle-group-control/as-radio-group.tsx#ToggleGroupControlAsRadioGroup"})}catch(__react_docgen_typescript_loader_error){}function UnforwardedToggleGroupControlAsButtonGroup({children,isAdaptiveWidth,label,onChange,size,value,...otherProps},forwardedRef){const containerRef=(0,react.useRef)(),[resizeListener,sizes]=(0,use_resize_observer.Z)(),baseId=(0,use_instance_id.Z)(ToggleGroupControlAsButtonGroup,"toggle-group-control-as-button-group").toString(),[selectedValue,setSelectedValue]=(0,react.useState)(value),groupContext={baseId,state:selectedValue,setState:setSelectedValue},previousValue=(0,use_previous.Z)(value);return(0,use_update_effect.Z)((()=>{previousValue!==groupContext.state&&onChange(groupContext.state)}),[groupContext.state]),(0,use_update_effect.Z)((()=>{value!==groupContext.state&&groupContext.setState(value)}),[value]),(0,jsx_runtime.jsx)(context.Z.Provider,{value:{...groupContext,isBlock:!isAdaptiveWidth,isDeselectable:!0,size},children:(0,jsx_runtime.jsxs)(component.Z,{"aria-label":label,...otherProps,ref:(0,use_merge_refs.Z)([containerRef,forwardedRef]),role:"group",children:[resizeListener,(0,jsx_runtime.jsx)(toggle_group_control_backdrop,{state:groupContext.state,containerRef,containerWidth:sizes.width,isAdaptiveWidth}),children]})})}UnforwardedToggleGroupControlAsButtonGroup.displayName="UnforwardedToggleGroupControlAsButtonGroup";const ToggleGroupControlAsButtonGroup=(0,react.forwardRef)(UnforwardedToggleGroupControlAsButtonGroup);try{ToggleGroupControlAsButtonGroup.displayName="ToggleGroupControlAsButtonGroup",ToggleGroupControlAsButtonGroup.__docgenInfo={description:"",displayName:"ToggleGroupControlAsButtonGroup",props:{children:{defaultValue:null,description:"The options to render in the `ToggleGroupControl`, using either the `ToggleGroupControlOption` or\n`ToggleGroupControlOptionIcon` components.",name:"children",required:!0,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Label for the control.",name:"label",required:!0,type:{name:"string"}},size:{defaultValue:{value:"'default'"},description:"The size variant of the control.",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"__unstable-large"'}]}},isAdaptiveWidth:{defaultValue:{value:"false"},description:"Determines if segments should be rendered with equal widths.",name:"isAdaptiveWidth",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: ReactText) => void"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"ReactText"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control/as-button-group.tsx#ToggleGroupControlAsButtonGroup"]={docgenInfo:ToggleGroupControlAsButtonGroup.__docgenInfo,name:"ToggleGroupControlAsButtonGroup",path:"packages/components/src/toggle-group-control/toggle-group-control/as-button-group.tsx#ToggleGroupControlAsButtonGroup"})}catch(__react_docgen_typescript_loader_error){}const noop=()=>{};function UnconnectedToggleGroupControl(props,forwardedRef){const{__nextHasNoMarginBottom=!1,className,isAdaptiveWidth=!1,isBlock=!1,isDeselectable=!1,label,hideLabelFromVision=!1,help,onChange=noop,size="default",value,children,...otherProps}=(0,use_context_system.y)(props,"ToggleGroupControl"),cx=(0,use_cx.I)(),classes=(0,react.useMemo)((()=>cx((({isBlock,isDeselectable,size})=>(0,emotion_react_browser_esm.iv)("background:",colors_values.D.ui.background,";border:1px solid transparent;border-radius:",config_values.Z.controlBorderRadius,";display:inline-flex;min-width:0;padding:2px;position:relative;transition:transform ",config_values.Z.transitionDurationFastest," linear;",(0,reduce_motion.r)("transition")," ",toggleGroupControlSize(size)," ",!isDeselectable&&enclosingBorders(isBlock),";",""))({isBlock,isDeselectable,size}),isBlock&&block,className)),[className,cx,isBlock,isDeselectable,size]),MainControl=isDeselectable?ToggleGroupControlAsButtonGroup:ToggleGroupControlAsRadioGroup;return(0,jsx_runtime.jsxs)(base_control.ZP,{help,__nextHasNoMarginBottom,children:[!hideLabelFromVision&&(0,jsx_runtime.jsx)(VisualLabelWrapper,{children:(0,jsx_runtime.jsx)(base_control.ZP.VisualLabel,{children:label})}),(0,jsx_runtime.jsx)(MainControl,{...otherProps,children,className:classes,isAdaptiveWidth,label,onChange,ref:forwardedRef,size,value})]})}UnconnectedToggleGroupControl.displayName="UnconnectedToggleGroupControl";const component_ToggleGroupControl=(0,context_connect.Iq)(UnconnectedToggleGroupControl,"ToggleGroupControl"),toggle_group_control_component=component_ToggleGroupControl;try{component_ToggleGroupControl.displayName="ToggleGroupControl",component_ToggleGroupControl.__docgenInfo={description:'`ToggleGroupControl` is a form component that lets users choose options\nrepresented in horizontal segments. To render options for this control use\n`ToggleGroupControlOption` component.\n\nThis component is intended for selecting a single persistent value from a set of options,\nsimilar to a how a radio button group would work. If you simply want a toggle to switch between views,\nuse a `TabPanel` instead.\n\nOnly use this control when you know for sure the labels of items inside won\'t\nwrap. For items with longer labels, you can consider a `SelectControl` or a\n`CustomSelectControl` component instead.\n\n```jsx\nimport {\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n} from \'@wordpress/components\';\n\nfunction Example() {\n  return (\n    <ToggleGroupControl label="my label" value="vertical" isBlock>\n      <ToggleGroupControlOption value="horizontal" label="Horizontal" />\n      <ToggleGroupControlOption value="vertical" label="Vertical" />\n    </ToggleGroupControl>\n  );\n}\n```',displayName:"ToggleGroupControl",props:{help:{defaultValue:null,description:"Additional description for the control.\n\nIt is preferable to use plain text for `help`, as it can be accessibly associated with the control using `aria-describedby`.\nWhen the `help` contains links, or otherwise non-plain text content, it will be associated with the control using `aria-details`.",name:"help",required:!1,type:{name:"ReactNode"}},__nextHasNoMarginBottom:{defaultValue:{value:"false"},description:"Start opting into the new margin-free styles that will become the default in a future version.",name:"__nextHasNoMarginBottom",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label for the control.",name:"label",required:!0,type:{name:"string"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},isAdaptiveWidth:{defaultValue:{value:"false"},description:"Determines if segments should be rendered with equal widths.",name:"isAdaptiveWidth",required:!1,type:{name:"boolean"}},isBlock:{defaultValue:{value:"false"},description:"Renders `ToggleGroupControl` as a (CSS) block element, spanning the entire width of\nthe available space. This is the recommended style when the options are text-based and not icons.",name:"isBlock",required:!1,type:{name:"boolean"}},isDeselectable:{defaultValue:{value:"false"},description:"Whether an option can be deselected by clicking it again.",name:"isDeselectable",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback when a segment is selected.",name:"onChange",required:!1,type:{name:"(value: ReactText) => void"}},value:{defaultValue:null,description:"The selected value.",name:"value",required:!1,type:{name:"ReactText"}},children:{defaultValue:null,description:"The options to render in the `ToggleGroupControl`, using either the `ToggleGroupControlOption` or\n`ToggleGroupControlOptionIcon` components.",name:"children",required:!0,type:{name:"ReactNode"}},size:{defaultValue:{value:"'default'"},description:"The size variant of the control.",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"__unstable-large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control/component.tsx#ToggleGroupControl"]={docgenInfo:component_ToggleGroupControl.__docgenInfo,name:"ToggleGroupControl",path:"packages/components/src/toggle-group-control/toggle-group-control/component.tsx#ToggleGroupControl"})}catch(__react_docgen_typescript_loader_error){}},"./packages/compose/build-module/hooks/use-previous/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>usePrevious});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function usePrevious(value){const ref=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)();return(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{ref.current=value}),[value]),ref.current}},"./packages/compose/build-module/hooks/use-resize-observer/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>useResizeAware});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const extractSize=(entry,boxProp,sizeType)=>entry[boxProp]?entry[boxProp][0]?entry[boxProp][0][sizeType]:entry[boxProp][sizeType]:"contentBoxSize"===boxProp?entry.contentRect["inlineSize"===sizeType?"width":"height"]:void 0;function useResizeObserver(opts={}){const onResize=opts.onResize,onResizeRef=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);onResizeRef.current=onResize;const round=opts.round||Math.round,resizeObserverRef=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)(),[size,setSize]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({width:void 0,height:void 0}),didUnmount=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1);(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(didUnmount.current=!1,()=>{didUnmount.current=!0})),[]);const previous=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)({width:void 0,height:void 0}),refCallback=function useResolvedElement(subscriber,refOrElement){const callbackRefElement=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),lastReportRef=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),cleanupRef=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useRef)(),callSubscriber=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{let element=null;callbackRefElement.current?element=callbackRefElement.current:refOrElement&&(element=refOrElement instanceof HTMLElement?refOrElement:refOrElement.current),lastReportRef.current&&lastReportRef.current.element===element&&lastReportRef.current.reporter===callSubscriber||(cleanupRef.current&&(cleanupRef.current(),cleanupRef.current=null),lastReportRef.current={reporter:callSubscriber,element},element&&(cleanupRef.current=subscriber(element)))}),[refOrElement,subscriber]);return(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{callSubscriber()}),[callSubscriber]),(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useCallback)((element=>{callbackRefElement.current=element,callSubscriber()}),[callSubscriber])}((0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useCallback)((element=>(resizeObserverRef.current&&resizeObserverRef.current.box===opts.box&&resizeObserverRef.current.round===round||(resizeObserverRef.current={box:opts.box,round,instance:new ResizeObserver((entries=>{const entry=entries[0];let boxProp="borderBoxSize";boxProp="border-box"===opts.box?"borderBoxSize":"device-pixel-content-box"===opts.box?"devicePixelContentBoxSize":"contentBoxSize";const reportedWidth=extractSize(entry,boxProp,"inlineSize"),reportedHeight=extractSize(entry,boxProp,"blockSize"),newWidth=reportedWidth?round(reportedWidth):void 0,newHeight=reportedHeight?round(reportedHeight):void 0;if(previous.current.width!==newWidth||previous.current.height!==newHeight){const newSize={width:newWidth,height:newHeight};previous.current.width=newWidth,previous.current.height=newHeight,onResizeRef.current?onResizeRef.current(newSize):didUnmount.current||setSize(newSize)}}))}),resizeObserverRef.current.instance.observe(element,{box:opts.box}),()=>{resizeObserverRef.current&&resizeObserverRef.current.instance.unobserve(element)})),[opts.box,round]),opts.ref);return(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({ref:refCallback,width:size.width,height:size.height})),[refCallback,size?size.width:null,size?size.height:null])}function useResizeAware(){const{ref,width,height}=useResizeObserver(),sizes=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({width:null!=width?width:null,height:null!=height?height:null})),[width,height]);return[(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div",{style:{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none",opacity:0,overflow:"hidden",zIndex:-1},"aria-hidden":"true",ref}),sizes]}}}]);